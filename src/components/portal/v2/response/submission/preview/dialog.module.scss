@use "../../../common/styles/mixins";
@use "../../../common/styles/variables";

.closeButton {
  @include mixins.btn-reset;
  position: fixed;
  right: 30px;
  top: 20px;
  z-index: 100;

  svg {
    filter: drop-shadow(0px 0px 12px rgba(0, 0, 0, .75));
  }
}

.contents {
  display: flex;
  flex-direction: column;
  height: 100dvh;
  overflow: hidden;
  width: 100dvw;

  @media (orientation: landscape) {
    flex-direction: row-reverse;
  }
}

.imagePreview {
  left: 50%;
  max-height: 95%;
  max-width: 95%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
}

.metadata {
  background-color: variables.$color-gray-blue;
  color: variables.$color-white;
  flex: 0 0 auto;
  font-size: variables.$fs-12;
  padding: 20px;

  dt {
    font-weight: 700;

    &:not(:first-child) {
      margin-block-start: 1em;
    }
  }

  @media (orientation: landscape) {
    padding-inline: 20px;
    padding-block: 72px;
    width: 160px;
  }
}

.preview {
  @include mixins.constrain-flex-grow("height");
  flex: 1 1 auto;
  overflow: auto;
  position: relative;
}

.writtenWorkPreview {
  background-color: variables.$color-white;
  border: 1px solid variables.$color-black;
  margin-block: 50px;
  margin-inline: auto;
  max-width: 95%;
  min-height: calc(100% - 100px);
  overflow-x: auto;
  padding-block: 120px;
  width: 664px;
}

.writtenWorkPreviewContent {
  padding-inline: 8.5%;
  width: fit-content;
  @include mixins.rich-text-styles($font-size: 18px);
}

.writtenWorkPreviewBody[data-is-poem="true"] {
  white-space: pre;
}

.writtenWorkPreviewTitle {
  font-size: inherit;
  font-weight: 700;
  margin-block-end: 1em;
}
